---

- name: install prerequisites
  sudo: yes
  apt:
    pkg: "{{ item }}"
    state: installed
    update_cache: yes
    cache_valid_time: 3600
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  with_items:
    - python-pycurl
    - python-psycopg2

- name: install official repo gpg key
  sudo: yes
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    id: ACCC4CF8
    state: present
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  when: postgresql_repository == "official"

- name: install official repository
  sudo: yes
  apt_repository:
    repo: "deb https://apt.postgresql.org/pub/repos/apt/ {{ ansible_lsb.codename }}-pgdg main"
    state: present
    update_cache: yes
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  when: postgresql_repository == "official"

- name: install postgresql package
  sudo: yes
  apt:
    pkg: "postgresql-{{ postgresql_version }}"
    state: installed
    update_cache: yes
    cache_valid_time: 3600
  environment:
    RUNLEVEL: 1
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"

- name: install libpq-dev package
  sudo: yes
  apt:
    pkg: "libpq-dev"
    state: installed
    update_cache: yes
    cache_valid_time: 3600
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  when: postgresql_dev

- name: install contrib package
  sudo: yes
  apt:
    pkg: "postgresql-contrib-{{ postgresql_version }}"
    state: installed
    update_cache: yes
    cache_valid_time: 3600
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  when: postgresql_contrib

- name: install repmgr package
  sudo: yes
  apt:
    pkg: "repmgr"
    state: installed
    update_cache: yes
    cache_valid_time: 3600
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  when: postgresql_repmgr

- name: install postgresql extension whitelisting
  sudo: yes
  apt:
    pkg: "postgresql-{{ postgresql_version }}-pgextwlist"
    state: present
  environment:
    http_proxy: "{{ postgresql_http_proxy }}"
    https_proxy: "{{ postgresql_http_proxy }}"
  when: '"pg_extwlist" in postgresql_extensions'


