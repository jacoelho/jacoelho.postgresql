---

- name: validation | postgresql version
  assert:
    that: "postgresql_version in [9.1,9.2,9.3,9.4]"

- name: validation | check parameters
  assert:
    that: "item.key in postgresql_parameters['{{ postgresql_version }}']"
  with_dict: postgresql_config

- name: validation | repository configs
  assert:
    that: "postgresql_repository in ['official','distro']"

- name: validation | replication configs
  assert:
    that: "postgresql_replication_role in ['master','slave']"

- name: validation | replication requirements
  assert:
    that:
      - "postgresql_config.listen_addresses is defined"
      - "postgresql_config.wal_level is defined"
      - "postgresql_config.wal_buffers is defined"
      - "postgresql_config.wal_keep_segments is defined"
      - "postgresql_config.max_wal_senders is defined"
      - "postgresql_config.checkpoint_segments is defined"
  when: postgresql_replication

- name: validation | replication master configuration
  assert:
    that:
      - "postgresql_config.wal_level == 'hot_standby'"
  when: postgresql_replication and postgresql_replication_role == 'master'

- name: validation | replication slave configuration
  assert:
    that:
      - "postgresql_config.hot_standby == 'on'"
  when: postgresql_replication and postgresql_replication_role == 'slave'

- name: validation | user basic configuration
  assert:
    that:
      - "item.user is defined"
      - "item.password is defined"
  with_items: ( postgresql_users + postgresql_users_replication )


- name: validation | user connection local
  assert:
    that:
      - "not item.1.address is defined"
  when: item.1.connection is defined and item.1.connection == 'local'
  with_subelements_safe:
    - postgresql_users
    - databases

- name: validation | user connection host hostssl nohostssl have address defined
  assert:
    that:
      - "item.1.address is defined"
  when: item.1.connection is defined and item.1.connection in ['host', 'hostssl', 'nohostssl']
  with_subelements_safe:
    - postgresql_users
    - databases

- name: validation | user connection hostssl and server with ssl enabled
  assert:
    that:
      - "postgresql_config.ssl is defined and postgresql_config.ssl == 'on'"
  when: item.1.connection is defined and item.1.connection == 'hostssl'
  with_subelements_safe:
    - postgresql_users
    - databases

- name: validation | ssl settings
  assert:
    that:
      - "postgresql_ssl is defined"
      - "postgresql_ssl.cert is defined"
      - "postgresql_ssl.cert_filepath is defined"
      - "postgresql_ssl.key is defined"
      - "postgresql_ssl.key_filepath is defined"
  when: postgresql_config.ssl is defined and postgresql_config.ssl == 'on'

